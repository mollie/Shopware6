<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <imports>
        <import resource="services/api.xml"/>
        <import resource="services/controller.xml"/>
        <import resource="services/facades.xml"/>
        <import resource="services/gateways.xml"/>
        <import resource="services/hydrators.xml"/>
        <import resource="services/repositories.xml"/>
        <import resource="services/services.xml"/>
        <import resource="services/snippets.xml"/>
        <import resource="services/subscriber.xml"/>
        <import resource="services/validators.xml"/>
        <import resource="services/builder.xml"/>
        <import resource="services/controller.xml"/>
        <import resource="services/handlers.xml"/>
    </imports>

    <services>

        <!-- Configuration -->
        <service id="Kiener\MolliePayments\Service\ConfigService" class="Kiener\MolliePayments\Service\ConfigService">
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
        </service>

        <!-- Helpers -->
        <service id="Kiener\MolliePayments\Helper\DeliveryStateHelper" class="Kiener\MolliePayments\Helper\DeliveryStateHelper">
            <argument type="service" id="Kiener\MolliePayments\Service\DeliveryService"/>
            <argument type="service" id="Shopware\Core\System\StateMachine\StateMachineRegistry"/>
        </service>

        <service id="Kiener\MolliePayments\Service\Order\OrderStateService" class="Kiener\MolliePayments\Service\Order\OrderStateService">
            <argument type="service" id="Kiener\MolliePayments\Service\LoggerService"/>
            <argument type="service" id="Kiener\MolliePayments\Service\Transition\OrderTransitionService"/>
        </service>

        <!-- Services -->

        <service id="Kiener\MolliePayments\Service\CustomerService" class="Kiener\MolliePayments\Service\CustomerService">
            <argument type="service" id="country.repository"/>
            <argument type="service" id="customer.repository"/>
            <argument type="service" id="Kiener\MolliePayments\Service\MollieApi\Customer"/>
            <argument type="service" id="event_dispatcher"/>
            <argument type="service" id="monolog.logger"/>
            <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextPersister"/>
            <argument type="service" id="salutation.repository"/>
            <argument type="service" id="Kiener\MolliePayments\Service\SettingsService"/>
            <argument>%kernel.shopware_version%</argument>
        </service>

        <service id="Kiener\MolliePayments\Service\CustomFieldService" class="Kiener\MolliePayments\Service\CustomFieldService">
            <argument type="service" id="service_container"/>
            <argument type="service" id="custom_field_set.repository"/>
        </service>

        <service id="Kiener\MolliePayments\Service\ApplePayDirect\ApplePayDomainVerificationService" public="true">
            <argument type="service" id="shopware.filesystem.public"/>
        </service>

        <service id="Kiener\MolliePayments\Service\DeliveryService" class="Kiener\MolliePayments\Service\DeliveryService">
            <argument type="service" id="order_delivery.repository"/>
        </service>

        <service id="Kiener\MolliePayments\Service\LoggerService" class="Kiener\MolliePayments\Service\LoggerService">
            <argument type="service" id="log_entry.repository"/>
            <argument type="service" id="Kiener\MolliePayments\Service\SettingsService"/>
        </service>


        <service id="Kiener\MolliePayments\Service\PaymentMethodService" class="Kiener\MolliePayments\Service\PaymentMethodService" public="true">
            <argument type="service" id="Shopware\Core\Content\Media\MediaService"/>
            <argument type="service" id="media.repository"/>
            <argument type="service" id="payment_method.repository"/>
            <argument type="service" id="Shopware\Core\Framework\Plugin\Util\PluginIdProvider"/>
        </service>

        <service id="Kiener\MolliePayments\Service\ProductService" class="Kiener\MolliePayments\Service\ProductService">
            <argument type="service" id="product.repository"/>
        </service>

        <service id="Kiener\MolliePayments\Service\SettingsService" class="Kiener\MolliePayments\Service\SettingsService">
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
        </service>

        <service id="Kiener\MolliePayments\Service\ShippingMethodService" class="Kiener\MolliePayments\Service\ShippingMethodService">
            <argument type="service" id="shipping_method.repository"/>
        </service>

        <service id="Kiener\MolliePayments\Service\ShopService" class="Kiener\MolliePayments\Service\ShopService">
            <argument type="service" id="router"/>
        </service>

        <service id="Kiener\MolliePayments\Service\TransactionService" class="Kiener\MolliePayments\Service\TransactionService">
            <argument type="service" id="order_transaction.repository"/>
        </service>

        <service id="Kiener\MolliePayments\Service\Cart\CartBackupService" class="Kiener\MolliePayments\Service\Cart\CartBackupService">
            <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartService"/>
        </service>

        <service id="Kiener\MolliePayments\Storefront\Controller\ComponentsController" public="true">
            <argument type="service" id="Kiener\MolliePayments\Service\CustomerService"/>

            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="Kiener\MolliePayments\Storefront\Controller\IDealIssuerController" public="true">
            <argument type="service" id="Kiener\MolliePayments\Service\CustomerService"/>

            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="Kiener\MolliePayments\Storefront\Controller\PaymentController" public="true">
            <argument type="service" id="router.default"/>
            <argument type="service" id="Kiener\MolliePayments\Compatibility\Gateway\CompatibilityGateway"/>
            <argument type="service" id="Kiener\MolliePayments\Factory\MollieApiFactory"/>
            <argument type="service" id="Shopware\Core\Framework\Event\BusinessEventDispatcher"/>
            <argument type="service" id="Kiener\MolliePayments\Service\Order\OrderStateService"/>
            <argument type="service" id="Kiener\MolliePayments\Service\SettingsService"/>
            <argument type="service" id="Kiener\MolliePayments\Service\TransactionService"/>
            <argument type="service" id="Kiener\MolliePayments\Service\LoggerService"/>
            <argument type="service" id="Kiener\MolliePayments\Service\Transition\TransactionTransitionService"/>
            <argument type="service" id="Kiener\MolliePayments\Facade\MollieOrderPaymentFlow"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="Kiener\MolliePayments\Service\Mollie\OrderStatusConverter" public="false">
        </service>

        <service id="Kiener\MolliePayments\Facade\Notifications\NotificationFacade" public="false">
            <argument type="service" id="Kiener\MolliePayments\Gateway\Mollie\MollieGateway"/>
            <argument type="service" id="Kiener\MolliePayments\Service\Mollie\OrderStatusConverter"/>
            <argument type="service" id="Kiener\MolliePayments\Service\Order\OrderStatusUpdater"/>
            <argument type="service" id="payment_method.repository"/>
            <argument type="service" id="order_transaction.repository"/>
        </service>

        <service id="Kiener\MolliePayments\Storefront\Controller\WebhookController" public="true">
            <argument type="service" id="Kiener\MolliePayments\Service\SettingsService"/>
            <argument type="service" id="Kiener\MolliePayments\Facade\Notifications\NotificationFacade"/>
            <argument type="service" id="Kiener\MolliePayments\Service\LoggerService"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <!-- Subscribers -->
        <service id="Kiener\MolliePayments\Subscriber\CheckoutConfirmPageSubscriber" class="Kiener\MolliePayments\Subscriber\CheckoutConfirmPageSubscriber">
            <argument type="service" id="Kiener\MolliePayments\Factory\MollieApiFactory"/>
            <argument type="service" id="Kiener\MolliePayments\Service\SettingsService"/>
            <argument type="service" id="language.repository"/>
            <argument type="service" id="locale.repository"/>
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="Kiener\MolliePayments\Subscriber\OrderStateSubscriber" class="Kiener\MolliePayments\Subscriber\OrderStateSubscriber">
            <argument type="service" id="Mollie\Api\MollieApiClient"/>
            <argument type="service" id="Kiener\MolliePayments\Service\OrderService"/>
            <argument type="service" id="Kiener\MolliePayments\Service\PaymentMethodService"/>
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="Kiener\MolliePayments\Subscriber\PaymentMethodSubscriber" class="Kiener\MolliePayments\Subscriber\PaymentMethodSubscriber">
            <argument type="service" id="Mollie\Api\MollieApiClient"/>
            <argument type="service" id="payment_method.repository"/>
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="Kiener\MolliePayments\Subscriber\TestModeNotificationSubscriber">
            <argument type="service" id="Kiener\MolliePayments\Service\SettingsService"/>
            <tag name="kernel.event_subscriber"/>
        </service>

    </services>

</container>
